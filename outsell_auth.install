<?php

/**
 * @file
 * Installation file for the outsell_auth module.
 */

/**
 * Implements hook_install().
 */
function outsell_auth_install() {

  // Rename the anonymous users.
  db_update('role')
    ->fields(array(
      'name' => 'Guest',
    ))
    ->condition('name', 'anonymous user', '=')
    ->execute();

  // Rename the authenticated user.
  db_update('role')
    ->fields(array(
      'name' => 'Registered',
    ))
    ->condition('name', 'authenticated user', '=')
    ->execute();

}

/**
 * Implements hook_uninstall().
 */
function outsell_auth_uninstall() {

  // Remove outsell_auth variables.
  variable_del('outsell_auth_backwards_compat');
  variable_del('outsell_auth_widget_pretext');
  variable_del('outsell_auth_widget_posttext');
  variable_del('outsell_auth_sso');

}

/**
 * Implements hook_update().
 *
 * This update will "drain the swamp" eg remove cruft from our older
 * openid/tethys login implementation.
 */
function outsell_auth_update_7001() {

  // Remove old openid variables that might be lingering.
  variable_del('openid_connect_clients_enabled');
  variable_del('openid_connect_client_generic');
  variable_del('openid_connect_userinfo_mapping_claims');
  variable_del('openid_connect_userinfo_mapping_property_field_current_company');
  variable_del('openid_connect_userinfo_mapping_property_field_name_first');
  variable_del('openid_connect_userinfo_mapping_property_field_name_last');
  variable_del('openid_connect_userinfo_mapping_property_timezone');
  variable_del('openid_connect_always_save_userinfo');
  variable_del('openid_connect_userinfo_mapping_property_field_email');
  variable_del('openid_connect_userinfo_mapping_property_field_first_name');
  variable_del('openid_connect_userinfo_mapping_property_field_last_name');

  // Batch purge older fields if they exist.
  $legacy_fields = array(
    'field_salesforce_entitlements',
    'field_first_name',
    'field_last_name',
    'field_entitlements'
  );

  // Queue up for destruction.
  foreach ($legacy_fields as $legacy_field) {
    if (field_info_field($legacy_field) !== NULL) {
      field_delete_field($legacy_field);
    }
  }

  // Destruct.
  field_purge_batch(1);

}
